
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bf8  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b28  00000000  00000000  00000e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000342  00000000  00000000  00001930  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001c74  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000052b  00000000  00000000  00001c98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  000021c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	51 c0       	rjmp	.+162    	; 0xa8 <__bad_interrupt>
   6:	00 00       	nop
   8:	4f c0       	rjmp	.+158    	; 0xa8 <__bad_interrupt>
   a:	00 00       	nop
   c:	4d c0       	rjmp	.+154    	; 0xa8 <__bad_interrupt>
   e:	00 00       	nop
  10:	4b c0       	rjmp	.+150    	; 0xa8 <__bad_interrupt>
  12:	00 00       	nop
  14:	49 c0       	rjmp	.+146    	; 0xa8 <__bad_interrupt>
  16:	00 00       	nop
  18:	47 c0       	rjmp	.+142    	; 0xa8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	45 c0       	rjmp	.+138    	; 0xa8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	43 c0       	rjmp	.+134    	; 0xa8 <__bad_interrupt>
  22:	00 00       	nop
  24:	41 c0       	rjmp	.+130    	; 0xa8 <__bad_interrupt>
  26:	00 00       	nop
  28:	3f c0       	rjmp	.+126    	; 0xa8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3d c0       	rjmp	.+122    	; 0xa8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3b c0       	rjmp	.+118    	; 0xa8 <__bad_interrupt>
  32:	00 00       	nop
  34:	39 c0       	rjmp	.+114    	; 0xa8 <__bad_interrupt>
  36:	00 00       	nop
  38:	37 c0       	rjmp	.+110    	; 0xa8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	35 c0       	rjmp	.+106    	; 0xa8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	33 c0       	rjmp	.+102    	; 0xa8 <__bad_interrupt>
  42:	00 00       	nop
  44:	31 c0       	rjmp	.+98     	; 0xa8 <__bad_interrupt>
  46:	00 00       	nop
  48:	2f c0       	rjmp	.+94     	; 0xa8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2d c0       	rjmp	.+90     	; 0xa8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2b c0       	rjmp	.+86     	; 0xa8 <__bad_interrupt>
  52:	00 00       	nop
  54:	29 c0       	rjmp	.+82     	; 0xa8 <__bad_interrupt>
  56:	00 00       	nop
  58:	27 c0       	rjmp	.+78     	; 0xa8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	25 c0       	rjmp	.+74     	; 0xa8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	23 c0       	rjmp	.+70     	; 0xa8 <__bad_interrupt>
  62:	00 00       	nop
  64:	21 c0       	rjmp	.+66     	; 0xa8 <__bad_interrupt>
  66:	00 00       	nop
  68:	1f c0       	rjmp	.+62     	; 0xa8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1d c0       	rjmp	.+58     	; 0xa8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1b c0       	rjmp	.+54     	; 0xa8 <__bad_interrupt>
  72:	00 00       	nop
  74:	19 c0       	rjmp	.+50     	; 0xa8 <__bad_interrupt>
  76:	00 00       	nop
  78:	17 c0       	rjmp	.+46     	; 0xa8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	15 c0       	rjmp	.+42     	; 0xa8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	13 c0       	rjmp	.+38     	; 0xa8 <__bad_interrupt>
  82:	00 00       	nop
  84:	11 c0       	rjmp	.+34     	; 0xa8 <__bad_interrupt>
  86:	00 00       	nop
  88:	0f c0       	rjmp	.+30     	; 0xa8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	0d c0       	rjmp	.+26     	; 0xa8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	0b c0       	rjmp	.+22     	; 0xa8 <__bad_interrupt>
  92:	00 00       	nop
  94:	09 c0       	rjmp	.+18     	; 0xa8 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	02 d0       	rcall	.+4      	; 0xaa <main>
  a6:	3f c0       	rjmp	.+126    	; 0x126 <_exit>

000000a8 <__bad_interrupt>:
  a8:	ab cf       	rjmp	.-170    	; 0x0 <__vectors>

000000aa <main>:
#define SETBIT(ADDRESS, BIT)    (ADDRESS |= (1 << BIT))
#define CLEARBIT(ADDRESS, BIT)  (ADDRESS &= ~(1 << BIT))
#define CHECKBIT(ADDRESS, BIT)  (!(ADDRESS & (1 << BIT)))
int main(void)
{
	DDRA &= ~(1<<PB0);
  aa:	08 98       	cbi	0x01, 0	; 1
	DDRA &= ~(1<<PB1);
  ac:	09 98       	cbi	0x01, 1	; 1
	DDRA &= ~(1<<PB2);
  ae:	0a 98       	cbi	0x01, 2	; 1
	DDRA &= ~(1<<PB3);
  b0:	0b 98       	cbi	0x01, 3	; 1
	DDRA &= ~(1<<PB4);
  b2:	0c 98       	cbi	0x01, 4	; 1
    DDRC |= (1<<PC1)|(1<<PC0)|(1<<PC3)|(1<<PC2)|(1<<PC6)|(1<<PC5);
  b4:	87 b1       	in	r24, 0x07	; 7
  b6:	8f 66       	ori	r24, 0x6F	; 111
  b8:	87 b9       	out	0x07, r24	; 7
   
    SETBIT(PORTC,PC5);
  ba:	45 9a       	sbi	0x08, 5	; 8
    SETBIT(PORTC,PC6);
  bc:	46 9a       	sbi	0x08, 6	; 8
    
    while (1) 
    {
		TCCR3A = (0<<COM3A0)|(0<<COM3A1)|(0<<COM3B0)|(0<<COM3B1);
  be:	e0 e9       	ldi	r30, 0x90	; 144
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	10 82       	st	Z, r1
		if(!(PINB & (1<<PB2)))
  c4:	1a 99       	sbic	0x03, 2	; 3
  c6:	04 c0       	rjmp	.+8      	; 0xd0 <main+0x26>
		{
			//MOVE FORWARD
			SETBIT(PORTC, PC0);
  c8:	40 9a       	sbi	0x08, 0	; 8
			CLEARBIT(PORTC, PC1);
  ca:	41 98       	cbi	0x08, 1	; 8
			SETBIT(PORTC, PC2);
  cc:	42 9a       	sbi	0x08, 2	; 8
			CLEARBIT(PORTC, PC3);
  ce:	43 98       	cbi	0x08, 3	; 8
		} 
		if(!(PINB & (1<<PB0)) && !(PINB & (1<<PB1)) && !(PINB & (1<<PB2)) && !(PINB & (1<<PB3)) && !(PINB & (1<<PB4)))
  d0:	18 99       	sbic	0x03, 0	; 3
  d2:	0c c0       	rjmp	.+24     	; 0xec <main+0x42>
  d4:	19 99       	sbic	0x03, 1	; 3
  d6:	0a c0       	rjmp	.+20     	; 0xec <main+0x42>
  d8:	1a 99       	sbic	0x03, 2	; 3
  da:	08 c0       	rjmp	.+16     	; 0xec <main+0x42>
  dc:	1b 99       	sbic	0x03, 3	; 3
  de:	06 c0       	rjmp	.+12     	; 0xec <main+0x42>
  e0:	1c 99       	sbic	0x03, 4	; 3
  e2:	04 c0       	rjmp	.+8      	; 0xec <main+0x42>
		{
			// U TURN
			CLEARBIT(PORTC, PC0);
  e4:	40 98       	cbi	0x08, 0	; 8
			SETBIT(PORTC, PC1);
  e6:	41 9a       	sbi	0x08, 1	; 8
			SETBIT(PORTC, PC2);
  e8:	42 9a       	sbi	0x08, 2	; 8
			CLEARBIT(PORTC, PC3);
  ea:	43 98       	cbi	0x08, 3	; 8
		}
		if((PINB & (1<<PB0)) && (PINB & (1<<PB1)) && (PINB & (1<<PB2)) && (PINB & (1<<PB3)) && (PINB & (1<<PB4)))
  ec:	18 9b       	sbis	0x03, 0	; 3
  ee:	0c c0       	rjmp	.+24     	; 0x108 <main+0x5e>
  f0:	19 9b       	sbis	0x03, 1	; 3
  f2:	0a c0       	rjmp	.+20     	; 0x108 <main+0x5e>
  f4:	1a 9b       	sbis	0x03, 2	; 3
  f6:	08 c0       	rjmp	.+16     	; 0x108 <main+0x5e>
  f8:	1b 9b       	sbis	0x03, 3	; 3
  fa:	06 c0       	rjmp	.+12     	; 0x108 <main+0x5e>
  fc:	1c 9b       	sbis	0x03, 4	; 3
  fe:	04 c0       	rjmp	.+8      	; 0x108 <main+0x5e>
		{
			//LINE
			CLEARBIT(PORTC, PC0);
 100:	40 98       	cbi	0x08, 0	; 8
			CLEARBIT(PORTC, PC1);
 102:	41 98       	cbi	0x08, 1	; 8
			SETBIT(PORTC, PC2);
 104:	42 9a       	sbi	0x08, 2	; 8
			CLEARBIT(PORTC, PC3);
 106:	43 98       	cbi	0x08, 3	; 8
		}
		if(!(PINB & (1<<PB0)) && !(PINB & (1<<PB1)) && (PINB & (1<<PB2)) && (PINB & (1<<PB3)) && (PINB & (1<<PB4)))
 108:	18 99       	sbic	0x03, 0	; 3
 10a:	db cf       	rjmp	.-74     	; 0xc2 <main+0x18>
 10c:	19 99       	sbic	0x03, 1	; 3
 10e:	d9 cf       	rjmp	.-78     	; 0xc2 <main+0x18>
 110:	1a 9b       	sbis	0x03, 2	; 3
 112:	d7 cf       	rjmp	.-82     	; 0xc2 <main+0x18>
 114:	1b 9b       	sbis	0x03, 3	; 3
 116:	d5 cf       	rjmp	.-86     	; 0xc2 <main+0x18>
 118:	1c 9b       	sbis	0x03, 4	; 3
 11a:	d3 cf       	rjmp	.-90     	; 0xc2 <main+0x18>
		{
			// RIGHT TURN
			CLEARBIT(PORTC, PC0);
 11c:	40 98       	cbi	0x08, 0	; 8
			SETBIT(PORTC, PC1);
 11e:	41 9a       	sbi	0x08, 1	; 8
			CLEARBIT(PORTC, PC2);
 120:	42 98       	cbi	0x08, 2	; 8
			CLEARBIT(PORTC, PC3);
 122:	43 98       	cbi	0x08, 3	; 8
 124:	ce cf       	rjmp	.-100    	; 0xc2 <main+0x18>

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
