
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000006f8  0000078c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800104  00800104  00000790  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cf8  00000000  00000000  00000830  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b87  00000000  00000000  00001528  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000592  00000000  00000000  000020af  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000090  00000000  00000000  00002644  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000570  00000000  00000000  000026d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e4  00000000  00000000  00002c44  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00002d28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e8 ef       	ldi	r30, 0xF8	; 248
  ac:	f6 e0       	ldi	r31, 0x06	; 6
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a4 30       	cpi	r26, 0x04	; 4
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a4 e0       	ldi	r26, 0x04	; 4
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a8 32       	cpi	r26, 0x28	; 40
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	ca d0       	rcall	.+404    	; 0x264 <main>
  d0:	11 c3       	rjmp	.+1570   	; 0x6f4 <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <calculate_pid>:

float error = 0, P = 0, I = 0, D = 0, PID_value = 0;
float previous_error = 0, previous_I = 0;

void calculate_pid(void)
{
  d4:	4f 92       	push	r4
  d6:	5f 92       	push	r5
  d8:	6f 92       	push	r6
  da:	7f 92       	push	r7
  dc:	8f 92       	push	r8
  de:	9f 92       	push	r9
  e0:	af 92       	push	r10
  e2:	bf 92       	push	r11
  e4:	cf 92       	push	r12
  e6:	df 92       	push	r13
  e8:	ef 92       	push	r14
  ea:	ff 92       	push	r15
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	00 d0       	rcall	.+0      	; 0xf2 <calculate_pid+0x1e>
  f2:	00 d0       	rcall	.+0      	; 0xf4 <calculate_pid+0x20>
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
	P = error;
  f8:	40 90 1c 01 	lds	r4, 0x011C	; 0x80011c <error>
  fc:	50 90 1d 01 	lds	r5, 0x011D	; 0x80011d <error+0x1>
 100:	60 90 1e 01 	lds	r6, 0x011E	; 0x80011e <error+0x2>
 104:	70 90 1f 01 	lds	r7, 0x011F	; 0x80011f <error+0x3>
 108:	40 92 18 01 	sts	0x0118, r4	; 0x800118 <P>
 10c:	50 92 19 01 	sts	0x0119, r5	; 0x800119 <P+0x1>
 110:	60 92 1a 01 	sts	0x011A, r6	; 0x80011a <P+0x2>
 114:	70 92 1b 01 	sts	0x011B, r7	; 0x80011b <P+0x3>
	I = I + previous_I;
 118:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_end>
 11c:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_end+0x1>
 120:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <__data_end+0x2>
 124:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <__data_end+0x3>
 128:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <I>
 12c:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <I+0x1>
 130:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <I+0x2>
 134:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <I+0x3>
 138:	c5 d1       	rcall	.+906    	; 0x4c4 <__addsf3>
 13a:	6b 01       	movw	r12, r22
 13c:	7c 01       	movw	r14, r24
 13e:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <I>
 142:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <I+0x1>
 146:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <I+0x2>
 14a:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <I+0x3>
	D = error - previous_error;
 14e:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <previous_error>
 152:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <previous_error+0x1>
 156:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <previous_error+0x2>
 15a:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <previous_error+0x3>
 15e:	c3 01       	movw	r24, r6
 160:	b2 01       	movw	r22, r4
 162:	af d1       	rcall	.+862    	; 0x4c2 <__subsf3>
 164:	4b 01       	movw	r8, r22
 166:	5c 01       	movw	r10, r24
 168:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <D>
 16c:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <D+0x1>
 170:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <D+0x2>
 174:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <D+0x3>

	PID_value = (Kp * P) + (Ki * I) + (Kd * D);
 178:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <Kp>
 17c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <Kp+0x1>
 180:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <Kp+0x2>
 184:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <Kp+0x3>
 188:	c3 01       	movw	r24, r6
 18a:	b2 01       	movw	r22, r4
 18c:	50 d2       	rcall	.+1184   	; 0x62e <__mulsf3>
 18e:	69 83       	std	Y+1, r22	; 0x01
 190:	7a 83       	std	Y+2, r23	; 0x02
 192:	8b 83       	std	Y+3, r24	; 0x03
 194:	9c 83       	std	Y+4, r25	; 0x04
 196:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <Ki>
 19a:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <Ki+0x1>
 19e:	40 91 26 01 	lds	r20, 0x0126	; 0x800126 <Ki+0x2>
 1a2:	50 91 27 01 	lds	r21, 0x0127	; 0x800127 <Ki+0x3>
 1a6:	c7 01       	movw	r24, r14
 1a8:	b6 01       	movw	r22, r12
 1aa:	41 d2       	rcall	.+1154   	; 0x62e <__mulsf3>
 1ac:	9b 01       	movw	r18, r22
 1ae:	ac 01       	movw	r20, r24
 1b0:	69 81       	ldd	r22, Y+1	; 0x01
 1b2:	7a 81       	ldd	r23, Y+2	; 0x02
 1b4:	8b 81       	ldd	r24, Y+3	; 0x03
 1b6:	9c 81       	ldd	r25, Y+4	; 0x04
 1b8:	85 d1       	rcall	.+778    	; 0x4c4 <__addsf3>
 1ba:	69 83       	std	Y+1, r22	; 0x01
 1bc:	7a 83       	std	Y+2, r23	; 0x02
 1be:	8b 83       	std	Y+3, r24	; 0x03
 1c0:	9c 83       	std	Y+4, r25	; 0x04
 1c2:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <Kd>
 1c6:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <Kd+0x1>
 1ca:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <Kd+0x2>
 1ce:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <Kd+0x3>
 1d2:	c5 01       	movw	r24, r10
 1d4:	b4 01       	movw	r22, r8
 1d6:	2b d2       	rcall	.+1110   	; 0x62e <__mulsf3>
 1d8:	9b 01       	movw	r18, r22
 1da:	ac 01       	movw	r20, r24
 1dc:	69 81       	ldd	r22, Y+1	; 0x01
 1de:	7a 81       	ldd	r23, Y+2	; 0x02
 1e0:	8b 81       	ldd	r24, Y+3	; 0x03
 1e2:	9c 81       	ldd	r25, Y+4	; 0x04
 1e4:	6f d1       	rcall	.+734    	; 0x4c4 <__addsf3>
 1e6:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <PID_value>
 1ea:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <PID_value+0x1>
 1ee:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <PID_value+0x2>
 1f2:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <PID_value+0x3>

	previous_I = I;
 1f6:	c0 92 04 01 	sts	0x0104, r12	; 0x800104 <__data_end>
 1fa:	d0 92 05 01 	sts	0x0105, r13	; 0x800105 <__data_end+0x1>
 1fe:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <__data_end+0x2>
 202:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <__data_end+0x3>
	previous_error = error;
 206:	40 92 08 01 	sts	0x0108, r4	; 0x800108 <previous_error>
 20a:	50 92 09 01 	sts	0x0109, r5	; 0x800109 <previous_error+0x1>
 20e:	60 92 0a 01 	sts	0x010A, r6	; 0x80010a <previous_error+0x2>
 212:	70 92 0b 01 	sts	0x010B, r7	; 0x80010b <previous_error+0x3>
}
 216:	0f 90       	pop	r0
 218:	0f 90       	pop	r0
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	ff 90       	pop	r15
 224:	ef 90       	pop	r14
 226:	df 90       	pop	r13
 228:	cf 90       	pop	r12
 22a:	bf 90       	pop	r11
 22c:	af 90       	pop	r10
 22e:	9f 90       	pop	r9
 230:	8f 90       	pop	r8
 232:	7f 90       	pop	r7
 234:	6f 90       	pop	r6
 236:	5f 90       	pop	r5
 238:	4f 90       	pop	r4
 23a:	08 95       	ret

0000023c <PWM_Init>:
void PWM_Init(void)
{
	ICR3 = 0xFFFF;
 23c:	8f ef       	ldi	r24, 0xFF	; 255
 23e:	9f ef       	ldi	r25, 0xFF	; 255
 240:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x7e0097>
 244:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x7e0096>
	TCCR3A |= (1<<WGM31)|(1<<COM3A1)|(1<<COM3B1);
 248:	e0 e9       	ldi	r30, 0x90	; 144
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	82 6a       	ori	r24, 0xA2	; 162
 250:	80 83       	st	Z, r24
	TCCR3B |= (1<<WGM33)|(1<<CS30);
 252:	e1 e9       	ldi	r30, 0x91	; 145
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 61       	ori	r24, 0x11	; 17
 25a:	80 83       	st	Z, r24
	DDRC |= (1<<PC6)|(1<<PC5);
 25c:	87 b1       	in	r24, 0x07	; 7
 25e:	80 66       	ori	r24, 0x60	; 96
 260:	87 b9       	out	0x07, r24	; 7
 262:	08 95       	ret

00000264 <main>:
}

int main(void)
{
	DDRA &= ~(1<<PB0);
 264:	08 98       	cbi	0x01, 0	; 1
	DDRA &= ~(1<<PB1);
 266:	09 98       	cbi	0x01, 1	; 1
	DDRA &= ~(1<<PB2);
 268:	0a 98       	cbi	0x01, 2	; 1
	DDRA &= ~(1<<PB3);
 26a:	0b 98       	cbi	0x01, 3	; 1
	DDRA &= ~(1<<PB4);
 26c:	0c 98       	cbi	0x01, 4	; 1
	
	PWM_Init();
 26e:	e6 df       	rcall	.-52     	; 0x23c <PWM_Init>
	calculate_pid();
 270:	31 df       	rcall	.-414    	; 0xd4 <calculate_pid>
 272:	87 b1       	in	r24, 0x07	; 7
	
    DDRC |= (1<<M1_CCW)|(1<<M1_CW)|(1<<M2_CCW)|(1<<M2_CW)/*|(1<<OC3A)|(1<<OC3B)*/;
 274:	8f 60       	ori	r24, 0x0F	; 15
 276:	87 b9       	out	0x07, r24	; 7
 278:	45 9a       	sbi	0x08, 5	; 8
   
    SETBIT(PORTC,OC3B);
 27a:	46 9a       	sbi	0x08, 6	; 8
    SETBIT(PORTC,OC3A);
 27c:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	
	OCR3A = 0X0000;
 280:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 284:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	OCR3B = 0X0000;
 288:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 28c:	c0 e9       	ldi	r28, 0x90	; 144
	
    
    while (1) 
    {
		TCCR3A = (0<<COM3A0)|(0<<COM3A1)|(0<<COM3B0)|(0<<COM3B1);
 28e:	d0 e0       	ldi	r29, 0x00	; 0
 290:	81 2c       	mov	r8, r1
		
		if     (((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 0;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))	{error = 0;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 4;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 3;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = 2;}
 292:	91 2c       	mov	r9, r1
 294:	54 01       	movw	r10, r8
 296:	68 94       	set
 298:	b6 f8       	bld	r11, 6
 29a:	c1 2c       	mov	r12, r1
		TCCR3A = (0<<COM3A0)|(0<<COM3A1)|(0<<COM3B0)|(0<<COM3B1);
		
		if     (((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 0;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))	{error = 0;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 4;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 3;}
 29c:	d1 2c       	mov	r13, r1
 29e:	68 94       	set
 2a0:	ee 24       	eor	r14, r14
 2a2:	e6 f8       	bld	r14, 6
 2a4:	fe 2c       	mov	r15, r14
 2a6:	40 e0       	ldi	r20, 0x00	; 0
    {
		TCCR3A = (0<<COM3A0)|(0<<COM3A1)|(0<<COM3B0)|(0<<COM3B1);
		
		if     (((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 0;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))	{error = 0;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 4;}
 2a8:	50 e0       	ldi	r21, 0x00	; 0
 2aa:	60 e8       	ldi	r22, 0x80	; 128
 2ac:	70 e4       	ldi	r23, 0x40	; 64
 2ae:	a8 e9       	ldi	r26, 0x98	; 152
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error =- 1;}
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = -2;}
		else if(((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = -3;}
		else if(((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = -4;}
			
		OCR3A = 0X1111/*+PID_value*/;  //B3FF=46079=(65535*180)/256
 2b0:	b0 e0       	ldi	r27, 0x00	; 0
 2b2:	21 e1       	ldi	r18, 0x11	; 17
 2b4:	31 e1       	ldi	r19, 0x11	; 17
 2b6:	ea e9       	ldi	r30, 0x9A	; 154
		OCR3B = 0XEEEE/*-PID_value*/;
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	8e ee       	ldi	r24, 0xEE	; 238
 2bc:	9e ee       	ldi	r25, 0xEE	; 238
 2be:	18 82       	st	Y, r1
	OCR3B = 0X0000;
	
    
    while (1) 
    {
		TCCR3A = (0<<COM3A0)|(0<<COM3A1)|(0<<COM3B0)|(0<<COM3B1);
 2c0:	18 99       	sbic	0x03, 0	; 3
		
		if     (((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 0;}
 2c2:	11 c0       	rjmp	.+34     	; 0x2e6 <main+0x82>
 2c4:	19 99       	sbic	0x03, 1	; 3
 2c6:	0f c0       	rjmp	.+30     	; 0x2e6 <main+0x82>
 2c8:	1a 99       	sbic	0x03, 2	; 3
 2ca:	0d c0       	rjmp	.+26     	; 0x2e6 <main+0x82>
 2cc:	1b 99       	sbic	0x03, 3	; 3
 2ce:	0b c0       	rjmp	.+22     	; 0x2e6 <main+0x82>
 2d0:	1c 99       	sbic	0x03, 4	; 3
 2d2:	09 c0       	rjmp	.+18     	; 0x2e6 <main+0x82>
 2d4:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <error>
 2d8:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <error+0x1>
 2dc:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <error+0x2>
 2e0:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <error+0x3>
 2e4:	e4 c0       	rjmp	.+456    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 2e6:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))	{error = 0;}
 2e8:	11 c0       	rjmp	.+34     	; 0x30c <main+0xa8>
 2ea:	19 9b       	sbis	0x03, 1	; 3
 2ec:	0f c0       	rjmp	.+30     	; 0x30c <main+0xa8>
 2ee:	1a 9b       	sbis	0x03, 2	; 3
 2f0:	0d c0       	rjmp	.+26     	; 0x30c <main+0xa8>
 2f2:	1b 9b       	sbis	0x03, 3	; 3
 2f4:	0b c0       	rjmp	.+22     	; 0x30c <main+0xa8>
 2f6:	1c 9b       	sbis	0x03, 4	; 3
 2f8:	09 c0       	rjmp	.+18     	; 0x30c <main+0xa8>
 2fa:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <error>
 2fe:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <error+0x1>
 302:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <error+0x2>
 306:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <error+0x3>
 30a:	d1 c0       	rjmp	.+418    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 30c:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 4;}
 30e:	11 c0       	rjmp	.+34     	; 0x332 <main+0xce>
 310:	19 9b       	sbis	0x03, 1	; 3
 312:	0f c0       	rjmp	.+30     	; 0x332 <main+0xce>
 314:	1a 9b       	sbis	0x03, 2	; 3
 316:	0d c0       	rjmp	.+26     	; 0x332 <main+0xce>
 318:	1b 9b       	sbis	0x03, 3	; 3
 31a:	0b c0       	rjmp	.+22     	; 0x332 <main+0xce>
 31c:	1c 99       	sbic	0x03, 4	; 3
 31e:	09 c0       	rjmp	.+18     	; 0x332 <main+0xce>
 320:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <error>
 324:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <error+0x1>
 328:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <error+0x2>
 32c:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <error+0x3>
 330:	be c0       	rjmp	.+380    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 332:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 1 ))   {error = 3;}
 334:	11 c0       	rjmp	.+34     	; 0x358 <main+0xf4>
 336:	19 9b       	sbis	0x03, 1	; 3
 338:	0f c0       	rjmp	.+30     	; 0x358 <main+0xf4>
 33a:	1a 9b       	sbis	0x03, 2	; 3
 33c:	0d c0       	rjmp	.+26     	; 0x358 <main+0xf4>
 33e:	1b 99       	sbic	0x03, 3	; 3
 340:	0b c0       	rjmp	.+22     	; 0x358 <main+0xf4>
 342:	1c 99       	sbic	0x03, 4	; 3
 344:	09 c0       	rjmp	.+18     	; 0x358 <main+0xf4>
 346:	c0 92 1c 01 	sts	0x011C, r12	; 0x80011c <error>
 34a:	d0 92 1d 01 	sts	0x011D, r13	; 0x80011d <error+0x1>
 34e:	e0 92 1e 01 	sts	0x011E, r14	; 0x80011e <error+0x2>
 352:	f0 92 1f 01 	sts	0x011F, r15	; 0x80011f <error+0x3>
 356:	ab c0       	rjmp	.+342    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 358:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = 2;}
 35a:	11 c0       	rjmp	.+34     	; 0x37e <main+0x11a>
 35c:	19 9b       	sbis	0x03, 1	; 3
 35e:	0f c0       	rjmp	.+30     	; 0x37e <main+0x11a>
 360:	1a 9b       	sbis	0x03, 2	; 3
 362:	0d c0       	rjmp	.+26     	; 0x37e <main+0x11a>
 364:	1b 99       	sbic	0x03, 3	; 3
 366:	0b c0       	rjmp	.+22     	; 0x37e <main+0x11a>
 368:	1c 9b       	sbis	0x03, 4	; 3
 36a:	09 c0       	rjmp	.+18     	; 0x37e <main+0x11a>
 36c:	80 92 1c 01 	sts	0x011C, r8	; 0x80011c <error>
 370:	90 92 1d 01 	sts	0x011D, r9	; 0x80011d <error+0x1>
 374:	a0 92 1e 01 	sts	0x011E, r10	; 0x80011e <error+0x2>
 378:	b0 92 1f 01 	sts	0x011F, r11	; 0x80011f <error+0x3>
 37c:	98 c0       	rjmp	.+304    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 37e:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 1 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = 1;}
 380:	19 c0       	rjmp	.+50     	; 0x3b4 <main+0x150>
 382:	19 9b       	sbis	0x03, 1	; 3
 384:	17 c0       	rjmp	.+46     	; 0x3b4 <main+0x150>
 386:	1a 99       	sbic	0x03, 2	; 3
 388:	15 c0       	rjmp	.+42     	; 0x3b4 <main+0x150>
 38a:	1b 99       	sbic	0x03, 3	; 3
 38c:	13 c0       	rjmp	.+38     	; 0x3b4 <main+0x150>
 38e:	1c 9b       	sbis	0x03, 4	; 3
 390:	11 c0       	rjmp	.+34     	; 0x3b4 <main+0x150>
 392:	0f 2e       	mov	r0, r31
 394:	41 2c       	mov	r4, r1
 396:	51 2c       	mov	r5, r1
 398:	f0 e8       	ldi	r31, 0x80	; 128
 39a:	6f 2e       	mov	r6, r31
 39c:	ff e3       	ldi	r31, 0x3F	; 63
 39e:	7f 2e       	mov	r7, r31
 3a0:	f0 2d       	mov	r31, r0
 3a2:	40 92 1c 01 	sts	0x011C, r4	; 0x80011c <error>
 3a6:	50 92 1d 01 	sts	0x011D, r5	; 0x80011d <error+0x1>
 3aa:	60 92 1e 01 	sts	0x011E, r6	; 0x80011e <error+0x2>
 3ae:	70 92 1f 01 	sts	0x011F, r7	; 0x80011f <error+0x3>
 3b2:	7d c0       	rjmp	.+250    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 3b4:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = 0;}
 3b6:	11 c0       	rjmp	.+34     	; 0x3da <main+0x176>
 3b8:	19 9b       	sbis	0x03, 1	; 3
 3ba:	0f c0       	rjmp	.+30     	; 0x3da <main+0x176>
 3bc:	1a 99       	sbic	0x03, 2	; 3
 3be:	0d c0       	rjmp	.+26     	; 0x3da <main+0x176>
 3c0:	1b 9b       	sbis	0x03, 3	; 3
 3c2:	0b c0       	rjmp	.+22     	; 0x3da <main+0x176>
 3c4:	1c 9b       	sbis	0x03, 4	; 3
 3c6:	09 c0       	rjmp	.+18     	; 0x3da <main+0x176>
 3c8:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <error>
 3cc:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <error+0x1>
 3d0:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <error+0x2>
 3d4:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <error+0x3>
 3d8:	6a c0       	rjmp	.+212    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 3da:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 1 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error =- 1;}
 3dc:	19 c0       	rjmp	.+50     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3de:	19 99       	sbic	0x03, 1	; 3
 3e0:	17 c0       	rjmp	.+46     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3e2:	1a 99       	sbic	0x03, 2	; 3
 3e4:	15 c0       	rjmp	.+42     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3e6:	1b 9b       	sbis	0x03, 3	; 3
 3e8:	13 c0       	rjmp	.+38     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3ea:	1c 9b       	sbis	0x03, 4	; 3
 3ec:	11 c0       	rjmp	.+34     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3ee:	0f 2e       	mov	r0, r31
 3f0:	41 2c       	mov	r4, r1
 3f2:	51 2c       	mov	r5, r1
 3f4:	f0 e8       	ldi	r31, 0x80	; 128
 3f6:	6f 2e       	mov	r6, r31
 3f8:	ff eb       	ldi	r31, 0xBF	; 191
 3fa:	7f 2e       	mov	r7, r31
 3fc:	f0 2d       	mov	r31, r0
 3fe:	40 92 1c 01 	sts	0x011C, r4	; 0x80011c <error>
 402:	50 92 1d 01 	sts	0x011D, r5	; 0x80011d <error+0x1>
 406:	60 92 1e 01 	sts	0x011E, r6	; 0x80011e <error+0x2>
 40a:	70 92 1f 01 	sts	0x011F, r7	; 0x80011f <error+0x3>
 40e:	4f c0       	rjmp	.+158    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 410:	18 9b       	sbis	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 0 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = -2;}
 412:	18 c0       	rjmp	.+48     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 414:	19 99       	sbic	0x03, 1	; 3
 416:	16 c0       	rjmp	.+44     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 418:	1a 9b       	sbis	0x03, 2	; 3
 41a:	14 c0       	rjmp	.+40     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 41c:	1b 9b       	sbis	0x03, 3	; 3
 41e:	12 c0       	rjmp	.+36     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 420:	1c 9b       	sbis	0x03, 4	; 3
 422:	10 c0       	rjmp	.+32     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 424:	0f 2e       	mov	r0, r31
 426:	41 2c       	mov	r4, r1
 428:	51 2c       	mov	r5, r1
 42a:	61 2c       	mov	r6, r1
 42c:	f0 ec       	ldi	r31, 0xC0	; 192
 42e:	7f 2e       	mov	r7, r31
 430:	f0 2d       	mov	r31, r0
 432:	40 92 1c 01 	sts	0x011C, r4	; 0x80011c <error>
 436:	50 92 1d 01 	sts	0x011D, r5	; 0x80011d <error+0x1>
 43a:	60 92 1e 01 	sts	0x011E, r6	; 0x80011e <error+0x2>
 43e:	70 92 1f 01 	sts	0x011F, r7	; 0x80011f <error+0x3>
 442:	35 c0       	rjmp	.+106    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 444:	18 99       	sbic	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 1 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = -3;}
 446:	19 c0       	rjmp	.+50     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 448:	19 99       	sbic	0x03, 1	; 3
 44a:	17 c0       	rjmp	.+46     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 44c:	1a 9b       	sbis	0x03, 2	; 3
 44e:	15 c0       	rjmp	.+42     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 450:	1b 9b       	sbis	0x03, 3	; 3
 452:	13 c0       	rjmp	.+38     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 454:	1c 9b       	sbis	0x03, 4	; 3
 456:	11 c0       	rjmp	.+34     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 458:	0f 2e       	mov	r0, r31
 45a:	41 2c       	mov	r4, r1
 45c:	51 2c       	mov	r5, r1
 45e:	f0 e4       	ldi	r31, 0x40	; 64
 460:	6f 2e       	mov	r6, r31
 462:	f0 ec       	ldi	r31, 0xC0	; 192
 464:	7f 2e       	mov	r7, r31
 466:	f0 2d       	mov	r31, r0
 468:	40 92 1c 01 	sts	0x011C, r4	; 0x80011c <error>
 46c:	50 92 1d 01 	sts	0x011D, r5	; 0x80011d <error+0x1>
 470:	60 92 1e 01 	sts	0x011E, r6	; 0x80011e <error+0x2>
 474:	70 92 1f 01 	sts	0x011F, r7	; 0x80011f <error+0x3>
 478:	1a c0       	rjmp	.+52     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 47a:	18 99       	sbic	0x03, 0	; 3
		else if(((CHECKBIT(PINB, PB0))== 1 )&&((CHECKBIT(PINB, PB1))== 0 )&&((CHECKBIT(PINB, PB2))== 0 )&&((CHECKBIT(PINB, PB3))== 0 )&&((CHECKBIT(PINB, PB4))== 0 ))   {error = -4;}
 47c:	18 c0       	rjmp	.+48     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 47e:	19 9b       	sbis	0x03, 1	; 3
 480:	16 c0       	rjmp	.+44     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 482:	1a 9b       	sbis	0x03, 2	; 3
 484:	14 c0       	rjmp	.+40     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 486:	1b 9b       	sbis	0x03, 3	; 3
 488:	12 c0       	rjmp	.+36     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 48a:	1c 9b       	sbis	0x03, 4	; 3
 48c:	10 c0       	rjmp	.+32     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 48e:	0f 2e       	mov	r0, r31
 490:	41 2c       	mov	r4, r1
 492:	51 2c       	mov	r5, r1
 494:	f0 e8       	ldi	r31, 0x80	; 128
 496:	6f 2e       	mov	r6, r31
 498:	f0 ec       	ldi	r31, 0xC0	; 192
 49a:	7f 2e       	mov	r7, r31
 49c:	f0 2d       	mov	r31, r0
 49e:	40 92 1c 01 	sts	0x011C, r4	; 0x80011c <error>
 4a2:	50 92 1d 01 	sts	0x011D, r5	; 0x80011d <error+0x1>
 4a6:	60 92 1e 01 	sts	0x011E, r6	; 0x80011e <error+0x2>
 4aa:	70 92 1f 01 	sts	0x011F, r7	; 0x80011f <error+0x3>
 4ae:	11 96       	adiw	r26, 0x01	; 1
			
		OCR3A = 0X1111/*+PID_value*/;  //B3FF=46079=(65535*180)/256
 4b0:	3c 93       	st	X, r19
 4b2:	2e 93       	st	-X, r18
 4b4:	91 83       	std	Z+1, r25	; 0x01
		OCR3B = 0XEEEE/*-PID_value*/;
 4b6:	80 83       	st	Z, r24
 4b8:	40 9a       	sbi	0x08, 0	; 8
		SETBIT(PORTC, M1_CW);
 4ba:	41 98       	cbi	0x08, 1	; 8
		CLEARBIT(PORTC, M1_CCW);
 4bc:	42 9a       	sbi	0x08, 2	; 8
		SETBIT(PORTC, M2_CW);
 4be:	43 98       	cbi	0x08, 3	; 8
		CLEARBIT(PORTC, M2_CCW);
 4c0:	fe ce       	rjmp	.-516    	; 0x2be <main+0x5a>

000004c2 <__subsf3>:
			
		
		
	}
 4c2:	50 58       	subi	r21, 0x80	; 128

000004c4 <__addsf3>:
 4c4:	bb 27       	eor	r27, r27
 4c6:	aa 27       	eor	r26, r26
 4c8:	0e d0       	rcall	.+28     	; 0x4e6 <__addsf3x>
 4ca:	77 c0       	rjmp	.+238    	; 0x5ba <__fp_round>
 4cc:	68 d0       	rcall	.+208    	; 0x59e <__fp_pscA>
 4ce:	30 f0       	brcs	.+12     	; 0x4dc <__addsf3+0x18>
 4d0:	6d d0       	rcall	.+218    	; 0x5ac <__fp_pscB>
 4d2:	20 f0       	brcs	.+8      	; 0x4dc <__addsf3+0x18>
 4d4:	31 f4       	brne	.+12     	; 0x4e2 <__addsf3+0x1e>
 4d6:	9f 3f       	cpi	r25, 0xFF	; 255
 4d8:	11 f4       	brne	.+4      	; 0x4de <__addsf3+0x1a>
 4da:	1e f4       	brtc	.+6      	; 0x4e2 <__addsf3+0x1e>
 4dc:	5d c0       	rjmp	.+186    	; 0x598 <__fp_nan>
 4de:	0e f4       	brtc	.+2      	; 0x4e2 <__addsf3+0x1e>
 4e0:	e0 95       	com	r30
 4e2:	e7 fb       	bst	r30, 7
 4e4:	53 c0       	rjmp	.+166    	; 0x58c <__fp_inf>

000004e6 <__addsf3x>:
 4e6:	e9 2f       	mov	r30, r25
 4e8:	79 d0       	rcall	.+242    	; 0x5dc <__fp_split3>
 4ea:	80 f3       	brcs	.-32     	; 0x4cc <__addsf3+0x8>
 4ec:	ba 17       	cp	r27, r26
 4ee:	62 07       	cpc	r22, r18
 4f0:	73 07       	cpc	r23, r19
 4f2:	84 07       	cpc	r24, r20
 4f4:	95 07       	cpc	r25, r21
 4f6:	18 f0       	brcs	.+6      	; 0x4fe <__addsf3x+0x18>
 4f8:	71 f4       	brne	.+28     	; 0x516 <__addsf3x+0x30>
 4fa:	9e f5       	brtc	.+102    	; 0x562 <__addsf3x+0x7c>
 4fc:	91 c0       	rjmp	.+290    	; 0x620 <__fp_zero>
 4fe:	0e f4       	brtc	.+2      	; 0x502 <__addsf3x+0x1c>
 500:	e0 95       	com	r30
 502:	0b 2e       	mov	r0, r27
 504:	ba 2f       	mov	r27, r26
 506:	a0 2d       	mov	r26, r0
 508:	0b 01       	movw	r0, r22
 50a:	b9 01       	movw	r22, r18
 50c:	90 01       	movw	r18, r0
 50e:	0c 01       	movw	r0, r24
 510:	ca 01       	movw	r24, r20
 512:	a0 01       	movw	r20, r0
 514:	11 24       	eor	r1, r1
 516:	ff 27       	eor	r31, r31
 518:	59 1b       	sub	r21, r25
 51a:	99 f0       	breq	.+38     	; 0x542 <__addsf3x+0x5c>
 51c:	59 3f       	cpi	r21, 0xF9	; 249
 51e:	50 f4       	brcc	.+20     	; 0x534 <__addsf3x+0x4e>
 520:	50 3e       	cpi	r21, 0xE0	; 224
 522:	68 f1       	brcs	.+90     	; 0x57e <__addsf3x+0x98>
 524:	1a 16       	cp	r1, r26
 526:	f0 40       	sbci	r31, 0x00	; 0
 528:	a2 2f       	mov	r26, r18
 52a:	23 2f       	mov	r18, r19
 52c:	34 2f       	mov	r19, r20
 52e:	44 27       	eor	r20, r20
 530:	58 5f       	subi	r21, 0xF8	; 248
 532:	f3 cf       	rjmp	.-26     	; 0x51a <__addsf3x+0x34>
 534:	46 95       	lsr	r20
 536:	37 95       	ror	r19
 538:	27 95       	ror	r18
 53a:	a7 95       	ror	r26
 53c:	f0 40       	sbci	r31, 0x00	; 0
 53e:	53 95       	inc	r21
 540:	c9 f7       	brne	.-14     	; 0x534 <__addsf3x+0x4e>
 542:	7e f4       	brtc	.+30     	; 0x562 <__addsf3x+0x7c>
 544:	1f 16       	cp	r1, r31
 546:	ba 0b       	sbc	r27, r26
 548:	62 0b       	sbc	r22, r18
 54a:	73 0b       	sbc	r23, r19
 54c:	84 0b       	sbc	r24, r20
 54e:	ba f0       	brmi	.+46     	; 0x57e <__addsf3x+0x98>
 550:	91 50       	subi	r25, 0x01	; 1
 552:	a1 f0       	breq	.+40     	; 0x57c <__addsf3x+0x96>
 554:	ff 0f       	add	r31, r31
 556:	bb 1f       	adc	r27, r27
 558:	66 1f       	adc	r22, r22
 55a:	77 1f       	adc	r23, r23
 55c:	88 1f       	adc	r24, r24
 55e:	c2 f7       	brpl	.-16     	; 0x550 <__addsf3x+0x6a>
 560:	0e c0       	rjmp	.+28     	; 0x57e <__addsf3x+0x98>
 562:	ba 0f       	add	r27, r26
 564:	62 1f       	adc	r22, r18
 566:	73 1f       	adc	r23, r19
 568:	84 1f       	adc	r24, r20
 56a:	48 f4       	brcc	.+18     	; 0x57e <__addsf3x+0x98>
 56c:	87 95       	ror	r24
 56e:	77 95       	ror	r23
 570:	67 95       	ror	r22
 572:	b7 95       	ror	r27
 574:	f7 95       	ror	r31
 576:	9e 3f       	cpi	r25, 0xFE	; 254
 578:	08 f0       	brcs	.+2      	; 0x57c <__addsf3x+0x96>
 57a:	b3 cf       	rjmp	.-154    	; 0x4e2 <__addsf3+0x1e>
 57c:	93 95       	inc	r25
 57e:	88 0f       	add	r24, r24
 580:	08 f0       	brcs	.+2      	; 0x584 <__addsf3x+0x9e>
 582:	99 27       	eor	r25, r25
 584:	ee 0f       	add	r30, r30
 586:	97 95       	ror	r25
 588:	87 95       	ror	r24
 58a:	08 95       	ret

0000058c <__fp_inf>:
 58c:	97 f9       	bld	r25, 7
 58e:	9f 67       	ori	r25, 0x7F	; 127
 590:	80 e8       	ldi	r24, 0x80	; 128
 592:	70 e0       	ldi	r23, 0x00	; 0
 594:	60 e0       	ldi	r22, 0x00	; 0
 596:	08 95       	ret

00000598 <__fp_nan>:
 598:	9f ef       	ldi	r25, 0xFF	; 255
 59a:	80 ec       	ldi	r24, 0xC0	; 192
 59c:	08 95       	ret

0000059e <__fp_pscA>:
 59e:	00 24       	eor	r0, r0
 5a0:	0a 94       	dec	r0
 5a2:	16 16       	cp	r1, r22
 5a4:	17 06       	cpc	r1, r23
 5a6:	18 06       	cpc	r1, r24
 5a8:	09 06       	cpc	r0, r25
 5aa:	08 95       	ret

000005ac <__fp_pscB>:
 5ac:	00 24       	eor	r0, r0
 5ae:	0a 94       	dec	r0
 5b0:	12 16       	cp	r1, r18
 5b2:	13 06       	cpc	r1, r19
 5b4:	14 06       	cpc	r1, r20
 5b6:	05 06       	cpc	r0, r21
 5b8:	08 95       	ret

000005ba <__fp_round>:
 5ba:	09 2e       	mov	r0, r25
 5bc:	03 94       	inc	r0
 5be:	00 0c       	add	r0, r0
 5c0:	11 f4       	brne	.+4      	; 0x5c6 <__fp_round+0xc>
 5c2:	88 23       	and	r24, r24
 5c4:	52 f0       	brmi	.+20     	; 0x5da <__fp_round+0x20>
 5c6:	bb 0f       	add	r27, r27
 5c8:	40 f4       	brcc	.+16     	; 0x5da <__fp_round+0x20>
 5ca:	bf 2b       	or	r27, r31
 5cc:	11 f4       	brne	.+4      	; 0x5d2 <__fp_round+0x18>
 5ce:	60 ff       	sbrs	r22, 0
 5d0:	04 c0       	rjmp	.+8      	; 0x5da <__fp_round+0x20>
 5d2:	6f 5f       	subi	r22, 0xFF	; 255
 5d4:	7f 4f       	sbci	r23, 0xFF	; 255
 5d6:	8f 4f       	sbci	r24, 0xFF	; 255
 5d8:	9f 4f       	sbci	r25, 0xFF	; 255
 5da:	08 95       	ret

000005dc <__fp_split3>:
 5dc:	57 fd       	sbrc	r21, 7
 5de:	90 58       	subi	r25, 0x80	; 128
 5e0:	44 0f       	add	r20, r20
 5e2:	55 1f       	adc	r21, r21
 5e4:	59 f0       	breq	.+22     	; 0x5fc <__fp_splitA+0x10>
 5e6:	5f 3f       	cpi	r21, 0xFF	; 255
 5e8:	71 f0       	breq	.+28     	; 0x606 <__fp_splitA+0x1a>
 5ea:	47 95       	ror	r20

000005ec <__fp_splitA>:
 5ec:	88 0f       	add	r24, r24
 5ee:	97 fb       	bst	r25, 7
 5f0:	99 1f       	adc	r25, r25
 5f2:	61 f0       	breq	.+24     	; 0x60c <__fp_splitA+0x20>
 5f4:	9f 3f       	cpi	r25, 0xFF	; 255
 5f6:	79 f0       	breq	.+30     	; 0x616 <__fp_splitA+0x2a>
 5f8:	87 95       	ror	r24
 5fa:	08 95       	ret
 5fc:	12 16       	cp	r1, r18
 5fe:	13 06       	cpc	r1, r19
 600:	14 06       	cpc	r1, r20
 602:	55 1f       	adc	r21, r21
 604:	f2 cf       	rjmp	.-28     	; 0x5ea <__fp_split3+0xe>
 606:	46 95       	lsr	r20
 608:	f1 df       	rcall	.-30     	; 0x5ec <__fp_splitA>
 60a:	08 c0       	rjmp	.+16     	; 0x61c <__fp_splitA+0x30>
 60c:	16 16       	cp	r1, r22
 60e:	17 06       	cpc	r1, r23
 610:	18 06       	cpc	r1, r24
 612:	99 1f       	adc	r25, r25
 614:	f1 cf       	rjmp	.-30     	; 0x5f8 <__fp_splitA+0xc>
 616:	86 95       	lsr	r24
 618:	71 05       	cpc	r23, r1
 61a:	61 05       	cpc	r22, r1
 61c:	08 94       	sec
 61e:	08 95       	ret

00000620 <__fp_zero>:
 620:	e8 94       	clt

00000622 <__fp_szero>:
 622:	bb 27       	eor	r27, r27
 624:	66 27       	eor	r22, r22
 626:	77 27       	eor	r23, r23
 628:	cb 01       	movw	r24, r22
 62a:	97 f9       	bld	r25, 7
 62c:	08 95       	ret

0000062e <__mulsf3>:
 62e:	0b d0       	rcall	.+22     	; 0x646 <__mulsf3x>
 630:	c4 cf       	rjmp	.-120    	; 0x5ba <__fp_round>
 632:	b5 df       	rcall	.-150    	; 0x59e <__fp_pscA>
 634:	28 f0       	brcs	.+10     	; 0x640 <__mulsf3+0x12>
 636:	ba df       	rcall	.-140    	; 0x5ac <__fp_pscB>
 638:	18 f0       	brcs	.+6      	; 0x640 <__mulsf3+0x12>
 63a:	95 23       	and	r25, r21
 63c:	09 f0       	breq	.+2      	; 0x640 <__mulsf3+0x12>
 63e:	a6 cf       	rjmp	.-180    	; 0x58c <__fp_inf>
 640:	ab cf       	rjmp	.-170    	; 0x598 <__fp_nan>
 642:	11 24       	eor	r1, r1
 644:	ee cf       	rjmp	.-36     	; 0x622 <__fp_szero>

00000646 <__mulsf3x>:
 646:	ca df       	rcall	.-108    	; 0x5dc <__fp_split3>
 648:	a0 f3       	brcs	.-24     	; 0x632 <__mulsf3+0x4>

0000064a <__mulsf3_pse>:
 64a:	95 9f       	mul	r25, r21
 64c:	d1 f3       	breq	.-12     	; 0x642 <__mulsf3+0x14>
 64e:	95 0f       	add	r25, r21
 650:	50 e0       	ldi	r21, 0x00	; 0
 652:	55 1f       	adc	r21, r21
 654:	62 9f       	mul	r22, r18
 656:	f0 01       	movw	r30, r0
 658:	72 9f       	mul	r23, r18
 65a:	bb 27       	eor	r27, r27
 65c:	f0 0d       	add	r31, r0
 65e:	b1 1d       	adc	r27, r1
 660:	63 9f       	mul	r22, r19
 662:	aa 27       	eor	r26, r26
 664:	f0 0d       	add	r31, r0
 666:	b1 1d       	adc	r27, r1
 668:	aa 1f       	adc	r26, r26
 66a:	64 9f       	mul	r22, r20
 66c:	66 27       	eor	r22, r22
 66e:	b0 0d       	add	r27, r0
 670:	a1 1d       	adc	r26, r1
 672:	66 1f       	adc	r22, r22
 674:	82 9f       	mul	r24, r18
 676:	22 27       	eor	r18, r18
 678:	b0 0d       	add	r27, r0
 67a:	a1 1d       	adc	r26, r1
 67c:	62 1f       	adc	r22, r18
 67e:	73 9f       	mul	r23, r19
 680:	b0 0d       	add	r27, r0
 682:	a1 1d       	adc	r26, r1
 684:	62 1f       	adc	r22, r18
 686:	83 9f       	mul	r24, r19
 688:	a0 0d       	add	r26, r0
 68a:	61 1d       	adc	r22, r1
 68c:	22 1f       	adc	r18, r18
 68e:	74 9f       	mul	r23, r20
 690:	33 27       	eor	r19, r19
 692:	a0 0d       	add	r26, r0
 694:	61 1d       	adc	r22, r1
 696:	23 1f       	adc	r18, r19
 698:	84 9f       	mul	r24, r20
 69a:	60 0d       	add	r22, r0
 69c:	21 1d       	adc	r18, r1
 69e:	82 2f       	mov	r24, r18
 6a0:	76 2f       	mov	r23, r22
 6a2:	6a 2f       	mov	r22, r26
 6a4:	11 24       	eor	r1, r1
 6a6:	9f 57       	subi	r25, 0x7F	; 127
 6a8:	50 40       	sbci	r21, 0x00	; 0
 6aa:	8a f0       	brmi	.+34     	; 0x6ce <__mulsf3_pse+0x84>
 6ac:	e1 f0       	breq	.+56     	; 0x6e6 <__mulsf3_pse+0x9c>
 6ae:	88 23       	and	r24, r24
 6b0:	4a f0       	brmi	.+18     	; 0x6c4 <__mulsf3_pse+0x7a>
 6b2:	ee 0f       	add	r30, r30
 6b4:	ff 1f       	adc	r31, r31
 6b6:	bb 1f       	adc	r27, r27
 6b8:	66 1f       	adc	r22, r22
 6ba:	77 1f       	adc	r23, r23
 6bc:	88 1f       	adc	r24, r24
 6be:	91 50       	subi	r25, 0x01	; 1
 6c0:	50 40       	sbci	r21, 0x00	; 0
 6c2:	a9 f7       	brne	.-22     	; 0x6ae <__mulsf3_pse+0x64>
 6c4:	9e 3f       	cpi	r25, 0xFE	; 254
 6c6:	51 05       	cpc	r21, r1
 6c8:	70 f0       	brcs	.+28     	; 0x6e6 <__mulsf3_pse+0x9c>
 6ca:	60 cf       	rjmp	.-320    	; 0x58c <__fp_inf>
 6cc:	aa cf       	rjmp	.-172    	; 0x622 <__fp_szero>
 6ce:	5f 3f       	cpi	r21, 0xFF	; 255
 6d0:	ec f3       	brlt	.-6      	; 0x6cc <__mulsf3_pse+0x82>
 6d2:	98 3e       	cpi	r25, 0xE8	; 232
 6d4:	dc f3       	brlt	.-10     	; 0x6cc <__mulsf3_pse+0x82>
 6d6:	86 95       	lsr	r24
 6d8:	77 95       	ror	r23
 6da:	67 95       	ror	r22
 6dc:	b7 95       	ror	r27
 6de:	f7 95       	ror	r31
 6e0:	e7 95       	ror	r30
 6e2:	9f 5f       	subi	r25, 0xFF	; 255
 6e4:	c1 f7       	brne	.-16     	; 0x6d6 <__mulsf3_pse+0x8c>
 6e6:	fe 2b       	or	r31, r30
 6e8:	88 0f       	add	r24, r24
 6ea:	91 1d       	adc	r25, r1
 6ec:	96 95       	lsr	r25
 6ee:	87 95       	ror	r24
 6f0:	97 f9       	bld	r25, 7
 6f2:	08 95       	ret

000006f4 <_exit>:
 6f4:	f8 94       	cli

000006f6 <__stop_program>:
 6f6:	ff cf       	rjmp	.-2      	; 0x6f6 <__stop_program>
